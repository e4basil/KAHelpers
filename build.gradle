buildscript {

    ext {
        lifecycle = '2.3.0'
        retrofit = "2.9.0"
        rxBindings = "4.0.0"
        glide = "4.12.0"
        constraint_layout = '2.0.4'
        coroutines = '1.4.2'
        nav_version = '2.3.3'
        rx = '3.0.0'
        material = "1.3.0"
        moshi = "1.11.0"
        fragment  = "1.3.0"
        activity = "1.3.0-alpha04"
        appCompat = "1.2.0"
        coreKTX = "1.5.0-beta02"
        securityVersion = "1.1.0-alpha03"
        recyclerview = '1.1.0'


        //app only
        room_version = "2.3.0-beta02"


        //tests
        junitVersion = '4.13.2'
        hamcrestVersion = '1.3'
        androidXTestCoreVersion = '1.3.0'
        androidXTestExtKotlinRunnerVersion = '1.1.2'
        androidXTestRulesVersion = '1.2.0-beta01'
        robolectricVersion = '4.5.1'
        archTestingVersion = '2.1.0'
        espressoVersion = '3.3.0'

        //compilation
        compileVersion = 30
        minVersion = 21
        verCode = 1
        verName = "1.0.0"
        testRunner = "androidx.test.runner.AndroidJUnitRunner"

        kotlin_version = '1.4.31'
    }

    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
    }
}


allprojects {
    group = "io.github.funkymuse"

    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

subprojects {
    if (it.name != 'app') {
        //setup gradle for libraries
        apply plugin: 'com.android.library'
        apply plugin: 'kotlin-android'
        apply plugin: 'kotlin-parcelize'
        apply plugin: 'com.github.dcendents.android-maven'

        dependencies {
            implementation fileTree(dir: 'libs', include: ['*.jar'])
            // Dependencies for local unit tests
            testImplementation "junit:junit:$junitVersion"
            testImplementation "org.hamcrest:hamcrest-all:$hamcrestVersion"
            testImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunnerVersion"
            testImplementation "androidx.test:core-ktx:$androidXTestCoreVersion"
            testImplementation "org.robolectric:robolectric:$robolectricVersion"
            testImplementation "androidx.arch.core:core-testing:$archTestingVersion"
            testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines"

            // AndroidX Test - Instrumented testing
            androidTestImplementation "androidx.test.ext:junit:$androidXTestExtKotlinRunnerVersion"
            androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
        }

    } else  {
        apply plugin: 'com.android.application'
        apply plugin: 'kotlin-android'
        apply plugin: 'kotlin-kapt'
        apply plugin: 'kotlin-parcelize'

        dependencies {
            implementation fileTree(dir: 'libs', include: ['*.jar'])
        }
    }


    android {
        compileSdkVersion compileVersion

        defaultConfig {
            minSdkVersion minVersion
            targetSdkVersion compileVersion
            versionCode verCode
            versionName verName
            testInstrumentationRunner testRunner
        }

        compileOptions {
            sourceCompatibility = 1.8
            targetCompatibility = 1.8
        }

        kotlinOptions {
            jvmTarget = "1.8"
        }

        buildFeatures {
            aidl = false
            renderScript = false
            resValues = false
            shaders = false
            buildConfig = false
        }

        testOptions.unitTests {
            includeAndroidResources = true
        }
    }
}
